#!/bin/false
# shellcheck shell=bash

# shellcheck source=./src//http.sh
source "http.sh"
# shellcheck source=./src/jq.sh
source "jq.sh"
# shellcheck source=./src/github.sh
source "github.sh"

function rules::repo::vulnerability_alerts_enabled() {
  local signature="${FUNCNAME[0]}"
  local opts=( -f "${BASH_SOURCE[0]%.*}.jq" --args "${signature}" "$@" )
  if [ "${1}" = "describe" ]
  then
    jq -n "${opts[@]}"
  else
    local resources_dump
    resources_dump="$(mktemp)"
    tee "$resources_dump" | jq -r '.resources.repositories | map([(. | tojson), "\(.url)/vulnerability-alerts"] | @tsv) | .[]' |
    while IFS=$'\t' read -r repo url
    do
      { github::fetch "${url}" -H 'Accept: application/vnd.github.dorian-preview+json' || { echo 'false' | http::default_response; } } |
        jq -s '[.[0], { "vulnerability-alerts": { enable: (.[1] == null) } }] | add | { resources: { repositories: [.] } }' \
          <(echo "$repo") <(cat)
    done |
      if jq -e "${opts[@]}"
      then
        return 1
      else
        local exit_status="$?"
        [ "$exit_status" -eq 4 ] || return "$exit_status";
      fi
  fi
}
